import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes
// ignore_for_file: unnecessary_brace_in_string_interps

//WARNING: This file is automatically generated. DO NOT EDIT, all your changes would be lost.

typedef LocaleChangeCallback = void Function(Locale locale);

class I18n implements WidgetsLocalizations {
  const I18n();
  static Locale? _locale;
  static bool _shouldReload = false;
  static Locale? get locale => _locale;
  static set locale(Locale? newLocale) {
    _shouldReload = true;
    I18n._locale = newLocale;
  }

  static const GeneratedLocalizationsDelegate delegate = GeneratedLocalizationsDelegate();

  /// function to be invoked when changing the language
  static LocaleChangeCallback? onLocaleChanged;

  static I18n? of(BuildContext context) =>
    Localizations.of<I18n>(context, WidgetsLocalizations);
  @override
  TextDirection get textDirection => TextDirection.ltr;
	/// "Learn App"
	String get appName => "Learn App";
	/// "Error!!!"
	String get error_Error => "Error!!!";
	/// "An Unexpected Error Occurred"
	String get error_Unknown => "An Unexpected Error Occurred";
	/// "Wrong data format"
	String get error_IllegalData => "Wrong data format";
	/// "No internet connection"
	String get error_NoNetwork => "No internet connection";
	/// "Unsupported file"
	String get error_UnsupportedFile => "Unsupported file";
	/// ["English", "Tiếng Việt"]
	List<String> get language => ["English", "Tiếng Việt"];
	/// "OK"
	String get button_Ok => "OK";
	/// "Cancel"
	String get button_Cancel => "Cancel";
	/// "See All"
	String get button_SeeAll => "See All";
	/// "Logout"
	String get button_Logout => "Logout";
	/// "Search"
	String get common_Search => "Search";
	/// it's complex
	String common_Plural_Hour(int count, String day){if (count == 0){return "${day} hour";} else if (count == 1){return "${day} hour";} else {return "${day} hours";}}
	/// it's complex
	String common_Plural_Day(int count, String day){if (count == 0){return "${day} day";} else if (count == 1){return "${day} day";} else {return "${day} days";}}
	/// it's complex
	String common_Plural_Week(int count, String day){if (count == 0){return "${day} week";} else if (count == 1){return "${day} week";} else {return "${day} weeks";}}
	/// it's complex
	String common_Plural_Session(int count, String session){if (count == 0){return "${session} session";} else if (count == 1){return "${session} session";} else {return "${session} sessions";}}
	/// it's complex
	String common_Plural_Question(int count, String question){if (count == 0){return "${question} question";} else if (count == 1){return "${question} question";} else {return "${question} questions";}}
	/// it's complex
	String common_Plural_Participant(int count, String participant){if (count == 0){return "${participant} participant";} else if (count == 1){return "${participant} participant";} else {return "${participant} participants";}}
	/// it's complex
	String common_Plural_Rating(int count, String rating){if (count == 0){return "${rating} rating";} else if (count == 1){return "${rating} rating";} else {return "${rating} ratings";}}
	/// "Sign In"
	String get auth_SignIn => "Sign In";
	/// "Sign Up"
	String get auth_SignUp => "Sign Up";
	/// "Forgot password"
	String get auth_ForgotPassword => "Forgot password";
	/// "Username"
	String get auth_Username_Label => "Username";
	/// "Enter user name or email"
	String get auth_Username_Hint => "Enter user name or email";
	/// "User name or email is required"
	String get auth_Username_IsRequired => "User name or email is required";
	/// "Password"
	String get auth_PasswordLabel => "Password";
	/// "Enter password"
	String get auth_PasswordHint => "Enter password";
	/// "Password is required"
	String get auth_PasswordIsRequired => "Password is required";
	/// "Full Name"
	String get auth_FullNameLabel => "Full Name";
	/// "Enter full Name"
	String get auth_FullNameHint => "Enter full Name";
	/// "Full name is required"
	String get auth_FullNameIsRequired => "Full name is required";
	/// "Haven't an account? "
	String get auth_HaveNotAnAccount => "Haven't an account? ";
	/// "Have you an account? "
	String get auth_HaveYouAnAccount => "Have you an account? ";
	/// "Home"
	String get dashboard_Home => "Home";
	/// "Setting"
	String get dashboard_Setting => "Setting";
	/// "Home"
	String get home_Title => "Home";
	/// "Popular courses"
	String get home_PopularCourses => "Popular courses";
	/// "Popular skill tests"
	String get home_PopularSkillTests => "Popular skill tests";
	/// "Setting Preferences"
	String get setting_Preferences => "Setting Preferences";
	/// "Language"
	String get setting_Language => "Language";
	/// ["Dark Mode", "Light Mode", "Auto Mode"]
	List<String> get setting_Mode => ["Dark Mode", "Light Mode", "Auto Mode"];
	/// "Help & Support"
	String get setting_HelpAndSupport => "Help & Support";
	/// "About App"
	String get setting_AboutApp => "About App";
	/// "Detail"
	String get course_Detail => "Detail";
	/// "Review"
	String get course_Review => "Review";
	/// "What you'll learn"
	String get course_WhatYouWillLearn => "What you'll learn";
	/// "to complete"
	String get course_ToComplete => "to complete";
}
class _I18n_en_US extends I18n {
  const _I18n_en_US();
}
class _I18n_vi_VN extends I18n {
  const _I18n_vi_VN();
  @override
  TextDirection get textDirection => TextDirection.ltr;
	/// "Learn App"
	@override
	String get appName => "Learn App";
	/// "Lỗi rồi!!!"
	@override
	String get error_Error => "Lỗi rồi!!!";
	/// "Đã có lỗi xảy ra"
	@override
	String get error_Unknown => "Đã có lỗi xảy ra";
	/// "Dữ liệu không hợp lệ"
	@override
	String get error_IllegalData => "Dữ liệu không hợp lệ";
	/// "Không có kết nối internet"
	@override
	String get error_NoNetwork => "Không có kết nối internet";
	/// "Không hỗ trợ tệp"
	@override
	String get error_UnsupportedFile => "Không hỗ trợ tệp";
	/// ["English", "Tiếng Việt"]
	@override
	List<String> get language => ["English", "Tiếng Việt"];
	/// "Đồng ý"
	@override
	String get button_Ok => "Đồng ý";
	/// "Xoá"
	@override
	String get button_Cancel => "Xoá";
	/// "Xem tất cả"
	@override
	String get button_SeeAll => "Xem tất cả";
	/// "Đăng xuất"
	@override
	String get button_Logout => "Đăng xuất";
	/// "Tìm kiếm"
	@override
	String get common_Search => "Tìm kiếm";
	/// it's complex
	@override
	String common_Plural_Hour(int count, String day){if (count == 0){return "${day} giờ";} else if (count == 1){return "${day} giờ";} else {return "${day} giờ";}}
	/// it's complex
	@override
	String common_Plural_Day(int count, String day){if (count == 0){return "${day} ngày";} else if (count == 1){return "${day} ngày";} else {return "${day} ngày";}}
	/// it's complex
	@override
	String common_Plural_Week(int count, String day){if (count == 0){return "${day} tuần";} else if (count == 1){return "${day} tuần";} else {return "${day} tuần";}}
	/// it's complex
	@override
	String common_Plural_Session(int count, String session){if (count == 0){return "${session} tiết học";} else if (count == 1){return "${session} tiết học";} else {return "${session} tiết học";}}
	/// it's complex
	@override
	String common_Plural_Question(int count, String question){if (count == 0){return "${question} câu hỏi";} else if (count == 1){return "${question} câu hỏi";} else {return "${question} câu hỏi";}}
	/// it's complex
	@override
	String common_Plural_Participant(int count, String participant){if (count == 0){return "${participant} người tham gia";} else if (count == 1){return "${participant} người tham gia";} else {return "${participant} người tham gia";}}
	/// it's complex
	@override
	String common_Plural_Rating(int count, String rating){if (count == 0){return "${rating} đánh giá";} else if (count == 1){return "${rating} đánh giá";} else {return "${rating} đánh giá";}}
	/// "Đăng Nhập"
	@override
	String get auth_SignIn => "Đăng Nhập";
	/// "Đăng Ký"
	@override
	String get auth_SignUp => "Đăng Ký";
	/// "Quên mật khẩu"
	@override
	String get auth_ForgotPassword => "Quên mật khẩu";
	/// "Tên người dùng hoặc email"
	@override
	String get auth_Username_Label => "Tên người dùng hoặc email";
	/// "Nhập tên người dùng hoặc email"
	@override
	String get auth_Username_Hint => "Nhập tên người dùng hoặc email";
	/// "Tên người dùng hoặc email là bắt buộc"
	@override
	String get auth_Username_IsRequired => "Tên người dùng hoặc email là bắt buộc";
	/// "Mật khẩu"
	@override
	String get auth_PasswordLabel => "Mật khẩu";
	/// "Nhập mật khẩu"
	@override
	String get auth_PasswordHint => "Nhập mật khẩu";
	/// "Mật khẩu là bắt buộc"
	@override
	String get auth_PasswordIsRequired => "Mật khẩu là bắt buộc";
	/// "Họ và tên"
	@override
	String get auth_FullNameLabel => "Họ và tên";
	/// "Nhập họ và tên"
	@override
	String get auth_FullNameHint => "Nhập họ và tên";
	/// "Họ và tên là bắt buộc"
	@override
	String get auth_FullNameIsRequired => "Họ và tên là bắt buộc";
	/// "Chưa có tài khoản? "
	@override
	String get auth_HaveNotAnAccount => "Chưa có tài khoản? ";
	/// "Bạn đã có tài khoản? "
	@override
	String get auth_HaveYouAnAccount => "Bạn đã có tài khoản? ";
	/// "Trang chủ"
	@override
	String get dashboard_Home => "Trang chủ";
	/// "Cài đặt"
	@override
	String get dashboard_Setting => "Cài đặt";
	/// "Trang chủ"
	@override
	String get home_Title => "Trang chủ";
	/// "Khoá học phổ biến"
	@override
	String get home_PopularCourses => "Khoá học phổ biến";
	/// "Kỹ năng phổ biến"
	@override
	String get home_PopularSkillTests => "Kỹ năng phổ biến";
	/// "Tùy chọn"
	@override
	String get setting_Preferences => "Tùy chọn";
	/// "Ngôn ngữ"
	@override
	String get setting_Language => "Ngôn ngữ";
	/// ["Chế độ tối", "Chế độ sáng", "Chế độ tự động"]
	@override
	List<String> get setting_Mode => ["Chế độ tối", "Chế độ sáng", "Chế độ tự động"];
	/// "Giúp đỡ & Hỗ trợ"
	@override
	String get setting_HelpAndSupport => "Giúp đỡ & Hỗ trợ";
	/// "Về ứng dụng"
	@override
	String get setting_AboutApp => "Về ứng dụng";
	/// "Chi tiết"
	@override
	String get course_Detail => "Chi tiết";
	/// "Review"
	@override
	String get course_Review => "Review";
	/// "Những gì bạn sẽ học"
	@override
	String get course_WhatYouWillLearn => "Những gì bạn sẽ học";
	/// "để hoàn thành"
	@override
	String get course_ToComplete => "để hoàn thành";
}
class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();
  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("en", "US"),
			Locale("vi", "VN")
    ];
  }

  LocaleResolutionCallback resolution({Locale? fallback}) {
    return (Locale? locale, Iterable<Locale> supported) {
      if (locale != null && isSupported(locale)) {
        return locale;
      }
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    I18n._locale ??= locale;
    I18n._shouldReload = false;
    final String lang = I18n._locale != null ? I18n._locale.toString() : "";
    final String languageCode = I18n._locale != null ? I18n._locale!.languageCode : "";
    if ("en_US" == lang) {
			return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
		}
		else if ("vi_VN" == lang) {
			return SynchronousFuture<WidgetsLocalizations>(const _I18n_vi_VN());
		}
    else if ("en" == languageCode) {
			return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
		}
		else if ("vi" == languageCode) {
			return SynchronousFuture<WidgetsLocalizations>(const _I18n_vi_VN());
		}

    return SynchronousFuture<WidgetsLocalizations>(const I18n());
  }

  @override
  bool isSupported(Locale locale) {
    for (var i = 0; i < supportedLocales.length ; i++) {
      final l = supportedLocales[i];
      if (l.languageCode == locale.languageCode) {
        return true;
      }
    }
    return false;
  }

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => I18n._shouldReload;
}
